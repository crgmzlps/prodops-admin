receivers:
  # hostmetrics:
  #   collection_interval: 20s
  #   scrapers:
  #     cpu:
  #       metrics:
  #         system.cpu.utilization:
  #           enabled: true
  #     load:
  #     memory:
  #       metrics:
  #         system.memory.utilization:
  #           enabled: true
  #     disk:
  #     filesystem:
  #       metrics:
  #         system.filesystem.utilization:
  #           enabled: true
  #     network:
  #     paging:
  #       metrics:
  #         system.paging.utilization:
  #           enabled: true
  #     processes:
  #     process:

  otlp:
    protocols:
      grpc:
      http:
        cors:
          allowed_origins:
            - http://localhost:3000
            - http://localhost:3001

processors:
  transform:
    logs:
      queries:
        # The OpenTelemetry log SDK says the trace context should be encoded in trace_id and span_id,
        # but New Relic conventions expects the fields to be dot delimited trace.id and span.id. We
        # use the transform processor to replace trace_id => trace.id, span_id => span.id.
        # https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/logs/README.md#trace-context-in-legacy-formats
        - replace_pattern(body, "\"trace_id\":", "\"trace.id\":")
        - replace_pattern(body, "\"span_id\":", "\"span.id\":")
  # memory_limiter:
  #   check_interval: 1s
  #   limit_mib: 1000
  #   spike_limit_mib: 200
  batch:
  # cumulativetodelta:
  #   include:
  #     metrics:
  #       - system.network.io
  #       - system.disk.operations
  #       - system.network.dropped
  #       - system.network.packets
  #       - process.cpu.time
  #     match_type: strict
  # resource:
  #   attributes:
  #     - key: host.id
  #       from_attribute: host.name
  #       action: upsert
  # resourcedetection:
  #   detectors: [env, system]

exporters:
  logging:
    logLevel: debug
  otlp:
    endpoint: ${OTEL_EXPORTER_OTLP_ENDPOINT}
    headers:
      api-key: ${NEW_RELIC_LICENSE_KEY}

service:
  # telemetry:
  #   logs:
  #     level: "debug"
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlp]
    metrics:
      # receivers: [otlp, hostmetrics]
      # processors: [batch, resourcedetection, resource, cumulativetodelta]
      receivers: [otlp]
      processors: [batch]
      exporters: [otlp]
    logs:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlp, logging]